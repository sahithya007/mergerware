// Defining methods
Meteor.methods({
  'borrower.requestLoan'(amount) {
    // Check if the input is of correct type
    check(amount, Number);

    // Check if the user is a borrower
    const user = Users.findOne(this.userId);
    if (!user || user.role !== 'borrower') {
      throw new Meteor.Error('not-authorized');
    }

    // Insert loan request into the collection
    Loans.insert({
      borrowerId: this.userId,
      amount,
      status: 'requested', // initial status of the loan
      createdAt: new Date(), // current date and time
    });
  },

  'borrower.viewPastLoans'() {
    // Check if the user is a borrower
    const user = Users.findOne(this.userId);
    if (!user || user.role !== 'borrower') {
      throw new Meteor.Error('not-authorized');
    }

    // Fetch the borrower's past loans
    const pastLoans = Loans.find({ borrowerId: this.userId }).fetch();

    return pastLoans;
  },
});
